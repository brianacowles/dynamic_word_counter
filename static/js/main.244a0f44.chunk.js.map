{"version":3,"sources":["Components/Checkboxes.js","Components/TextInput.js","App.js","index.js"],"names":["Checkboxes","params","onChange","handleChange","event","target","name","checked","className","type","defaultChecked","parentheses","quotes","smallWords","TextInput","useState","count","setCount","text","setText","useEffect","newText","replaceAll","length","split","placeholder","value","rows","App","setParams","console","log","newVal","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAEe,SAASA,EAAT,GAAyC,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,SAElCC,EAAe,SAACC,GAClBF,EAASE,EAAMC,OAAOC,KAAMF,EAAMC,OAAOE,UAG7C,OACI,sBAAKC,UAAU,aAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,wBAAOA,UAAU,WAAjB,UACI,uBACIF,KAAK,cACLG,KAAK,WACLP,SAAUC,EACVO,eAAgBT,EAAOU,YACvBH,UAAU,SANlB,oCAWJ,qBAAKA,UAAU,sBAAf,SACI,wBAAOA,UAAU,WAAjB,UACI,uBACIF,KAAK,SACLG,KAAK,WACLP,SAAUC,EACVO,eAAgBT,EAAOW,OACvBJ,UAAU,SANlB,+BAWJ,qBAAKA,UAAU,sBAAf,SACI,wBAAOA,UAAU,WAAjB,UACI,uBACIF,KAAK,aACLG,KAAK,WACLP,SAAUC,EACVO,eAAgBT,EAAOY,WACvBL,UAAU,SANlB,0CCjCD,SAASM,EAAT,GAA8B,IAAVb,EAAS,EAATA,OAAS,EAEdc,mBAAS,GAFK,mBAEjCC,EAFiC,KAE1BC,EAF0B,OAGhBF,mBAAS,IAHO,mBAGjCG,EAHiC,KAG3BC,EAH2B,KAqCxC,OA5BAC,qBAAU,WACN,IAAIC,EAAUH,EACXjB,EAAOU,cAENU,EAAUA,EAAQC,WAAW,WAAY,KAE1CrB,EAAOW,SAENS,EAAUA,EAAQC,WAAW,SAAU,KAExCrB,EAAOY,aAENQ,EAAUA,EAAQC,WAAW,gBAAiB,KAY5B,KAFtBD,GADAA,GAFAA,GAFAA,GAFAA,EAAUA,EAAQC,WAAW,iBAAa,MAExBA,WAAW,UAAW,MAEtBA,WAAW,mBAAoB,KAE/BA,WAAW,UAAW,MACtBA,WAAW,QAAS,KAE3BC,QACPN,EAASI,EAAQG,MAAM,KAAKD,UACjC,CAACtB,EAAQiB,IAGR,sBAAKV,UAAU,YAAf,UACI,oBAAGA,UAAU,OAAb,UAAoB,uCAApB,IAAmCQ,KACnC,0BACIR,UAAU,WACViB,YAAY,uBACZvB,SAtCS,SAACE,GAClBe,EAAQf,EAAMC,OAAOqB,QAsCbC,KAAM,QChBPC,MAzBf,WAAgB,IAAD,EAEeb,mBAAS,CACnC,aAAe,EACf,QAAU,EACV,YAAc,IALH,mBAENd,EAFM,KAEE4B,EAFF,KAeb,OAFAC,QAAQC,IAAI9B,GAGV,sBAAKO,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,0BACA,cAACR,EAAD,CAAYC,OAAQA,EAAQC,SATX,SAACI,EAAM0B,GAC1BH,EAAU,2BAAI5B,GAAL,kBAAcK,EAAO0B,QAS5B,uBACA,cAAClB,EAAD,CAAWb,OAAQA,QCrBzBgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.244a0f44.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Checkboxes({params, onChange}) {\n\n    const handleChange = (event) => {\n        onChange(event.target.name, event.target.checked);\n    }\n\n    return(\n        <div className='Checkboxes'>\n            <div className='field is-horizontal'>\n                <label className='checkbox'>\n                    <input \n                        name='parentheses'\n                        type='checkbox'\n                        onChange={handleChange}\n                        defaultChecked={params.parentheses}\n                        className='mr-2'\n                    />\n                    Exclude words in parentheses\n                </label>\n            </div>\n            <div className='field is-horizontal'>\n                <label className='checkbox'>\n                    <input \n                        name='quotes'\n                        type='checkbox'\n                        onChange={handleChange}\n                        defaultChecked={params.quotes}\n                        className='mr-2'\n                    />\n                    Exclude words in quotes\n                </label>\n            </div>\n            <div className='field is-horizontal'>\n                <label className='checkbox'>\n                    <input \n                        name='smallWords'\n                        type='checkbox'\n                        onChange={handleChange}\n                        defaultChecked={params.smallWords}\n                        className='mr-2'\n                    />\n                    Exclude words 3 letters or less\n                </label>\n            </div>\n        </div>\n    )\n}","import React, { useEffect, useState } from 'react';\n\nexport default function TextInput({params}) {\n\n    const [count, setCount] = useState(0);\n    const [text, setText] = useState('');\n\n    const handleChange = (event) => {\n        setText(event.target.value)\n    }\n\n    useEffect(() => {\n        let newText = text;\n        if(params.parentheses) {\n            // remove text in parentheses\n            newText = newText.replaceAll(/\\(.*\\)/gi, '');\n        }\n        if(params.quotes) {\n            // remove text in quotes\n            newText = newText.replaceAll(/\".*\"/gi, '');\n        }\n        if(params.smallWords) {\n            // remove words 3 letters or less\n            newText = newText.replaceAll(/\\b\\w{1,3}\\b/gi, '');\n        }\n        // replace ellipsis with spaces\n        newText = newText.replaceAll(/\\.{3}|â€¦/gi, ' ')\n        // replace newlines with spaces\n        newText = newText.replaceAll(/\\n|\\r/gi, ' ')\n        // remove special characters\n        newText = newText.replaceAll(/[^a-zA-Z\\d\\s:]/gi, '');\n        // remove extra spaces and trailing spaces\n        newText = newText.replaceAll(/\\s\\s+/gi, ' ')\n        newText = newText.replaceAll(/\\s$/gi, '')\n\n        if(newText.length !== 0)\n            setCount(newText.split(' ').length);\n    }, [params, text])\n\n    return(\n        <div className='TextInput'>\n            <p className='mb-1'><b>Count:</b> {count}</p>\n            <textarea \n                className='textarea' \n                placeholder='Paste your text here'\n                onChange={handleChange}\n                rows={10}\n            />\n        </div>\n    )\n}","import React, { useState } from 'react';\nimport './App.scss';\nimport Checkboxes from './Components/Checkboxes'\nimport TextInput from './Components/TextInput'\n\nfunction App() {\n\n  const [params, setParams] = useState({\n    'parentheses': true,\n    'quotes': true,\n    'smallWords': true\n  })\n\n  // callback function to alter params array\n  const handleChange = (name, newVal) => {\n    setParams({...params, [name]: newVal})\n  }\n\n  console.log(params)\n\n  return (\n    <div className='App'>\n      <h1 className='title'>Word Counter</h1>\n      <Checkboxes params={params} onChange={handleChange}/>\n      <hr />\n      <TextInput params={params}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}